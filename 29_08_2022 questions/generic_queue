using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _2908_ps
{
    public class Generic_Queue
    {
        int front, rear, capacity;
        int[] queue;

        public  Generic_Queue(int c)
        {
            front = rear = 0;
            capacity = c;
            queue = new int[capacity];

        }

        public void queueEnqueue(int data)
        {
            if(capacity == rear)
            {
                Console.WriteLine("queue is full");
                return;
            }
            else
            {
                queue[rear] = data;
                rear++;
            }
            return;
        }

        public void queueDequeue()
        {
            if(front == rear)
            {
                Console.WriteLine("queue empty");
            }
            else
            {
                for(int i = 0; i < rear; i++)
                {
                    queue[i] = queue[i+1];
                }

                if (rear < capacity)
                    queue[rear] = 0;

                rear--;
            }
            return;
        }

        public void queueDisplay()
        {
            int i;
            if (front == rear)
            {
                Console.WriteLine("empty queue");
            }
            else
            {
                for(i = front; i < rear; i++)
                {
                    Console.WriteLine("{0} ", queue[i]);
                }
            }
            return;
        }

        public void queueFront()
        {
            if (front == rear)
            {
                Console.WriteLine("empty queue");
            }
            else
            {
                Console.WriteLine("front element of queue is {0}", queue[front]);
            }
            return;
        }

        public class Test
        {
            static void Main(string[] args)
            {
                Generic_Queue q = new Generic_Queue(10);

                Console.WriteLine("queue elements: ");
                q.queueDisplay();

                Console.WriteLine("----------------");
                Console.WriteLine("adding elements: ");

                Console.WriteLine("queue elements: ");
                q.queueEnqueue(3);
                q.queueEnqueue(7);
                q.queueEnqueue(8);
                q.queueEnqueue(9);

                q.queueDisplay();

                Console.WriteLine("----------------");
                Console.WriteLine("deleting element: ");
                q.queueDequeue();
                Console.WriteLine("queue: ");
                q.queueDisplay();

                Console.WriteLine("front element: ");
                q.queueFront();




                Console.ReadLine();
                
            }
        }


        

    }
}
