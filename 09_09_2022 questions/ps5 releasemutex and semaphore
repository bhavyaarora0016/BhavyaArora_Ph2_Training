using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace _0909_ps
{
    class SemaphoreClass
    {
        static Mutex mtx = new Mutex();
        static Thread[] threads = new Thread[10];
        static Semaphore sema = new Semaphore(3, 3);

        static void Present()
        {
            Console.WriteLine("{0} is waiting in line...", Thread.CurrentThread.Name);
            sema.WaitOne();

            Console.WriteLine("{0} entered...", Thread.CurrentThread.Name);
            Thread.Sleep(300);

            Console.WriteLine("{0} is leaving...", Thread.CurrentThread.Name);
            sema.Release();

        }

        static void RelMut()
        {
            mtx.WaitOne();

            Console.WriteLine("----------------------");

            Console.WriteLine("{0} has entered.", Thread.CurrentThread.Name);

            Thread.Sleep(500);

            Console.WriteLine("{0} is leaving.", Thread.CurrentThread.Name);

            mtx.ReleaseMutex();
        }

        private static void MyThread()
        {
            for (int i = 0; i < 3; i++)
            {
                RelMut();
            }
        }

        static void Main(string[] args)
        {
            for (int i = 0; i < 7; i++)
            {
                threads[i] = new Thread(Present);
                threads[i].Name = "thread_" + i;
                threads[i].Start();
            }


            for (int j = 0; j < 3; j++)
            {
                Thread mythrd = new Thread(new ThreadStart(MyThread));
                mythrd.Name = String.Format("Thread {0}", j+1);
                mythrd.Start();
            }

            Console.ReadKey();
        }
    }
}
